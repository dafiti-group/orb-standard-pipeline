description: |
  Example using a legacy branch strategy [master,qa].
  This example assume that your application is already using docker-compose run --rm ci to unit test everything!
  You only need to replace:
    -<path-to-gitops-deployment>in steps:
      - deploy-qa
      - deploy-live
  In order to be notifyed in slack channel, please setup an environment SLACK_MENTIONS,
  in your project settings or in your organization context, with the name of your team
  like @team or with a specific person id using <@USERID>
usage:
  version: 2.1
  default_filter: &default_filter
    branches:
      only: [qa, master]
  qa_filter: &qa_filter
    branches:
      only: [qa]
  head_filter: &head_filter
    branches:
      only: [master]
  orbs:
    dft: dafiti-group/orb-standard-pipeline@1.1.2
  workflows:
    deployment-flow:
      jobs:
        # test gates ====================================================================================================
        - dft/unit-test:
            name: unit-test
            context: [TEST, SLACK, BUILD_AND_PUSH]
        - dft/sonarqube:
            name: sonarqube
            context: [SONAR, SLACK]
        - dft/checkmarx:
            name: checkmarx
            context: [SLACK, CHECKMARX_CLOUD]
        # ===============================================================================================================
        - dft/ecr-build-and-push:
            name: build-and-push
            context: [TESTS, SLACK, BUILD_AND_PUSH]
            filters: *default_filter
            requires: [unit-test, sonarqube]
        # qa deploy =====================================================================================================
        - dft/eks-deploy:
            name: deploy-qa
            context: [TESTS, SLACK, BUILD_AND_DEPLOY]
            deployment_path: <path-to-gitops-deployment>
            filters: *qa_filter
            requires: [build-and-push]
        - dft/instana-notify:
            name: instana-notify-qa
            context: [INSTANA, DEPLOY_QA]
            requires: [deploy-qa]
        - dft/grafana-notify:
            name: grafana-notify-qa
            context: [GRAFANA, SLACK]
            target_env: qa
            requires: [deploy-qa]
        # live deploy ===================================================================================================
        - dft/eks-deploy:
            name: deploy-live
            context: [TESTS, SLACK, BUILD_AND_DEPLOY]
            deployment_path: <path-to-gitops-deployment>
            filters: *head_filter
            requires: [build-and-push]
        - dft/instana-notify:
            name: instana-notify-live
            context: [INSTANA, DEPLOY_LIVE]
            requires: [deploy-live]
        - dft/grafana-notify:
            name: grafana-notify-live
            context: [GRAFANA, SLACK]
            target_env: live
            requires: [deploy-live]
