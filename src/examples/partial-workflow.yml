description: |
  This workflow example is used only to deploys in 2 environments: [qa, live]
  This example assume that your application is already using docker-compose run --rm ci to unit test everything!
  In order to be notifyed in slack channel, please setup an environment SLACK_MENTIONS,
  in your project settings or in your organization context, with the name of your team
  like @team or with a specific person id using <@USERID>
  Below you'll find some placeholders to replace like:
    - <path-to-gitops-deployment> in steps:
      - rollback-live
      - deploy-to-qa
    - <your-application-service-name-in-apm> in steps:
      - feedback-instana-qa
      - feedback-instana-production
usage:
  version: 2.1
  parameters:
    rollback:
      type: boolean
      default: false
      description: Arbitraty parameter to trigger manually this workflow selecting rollback actions
    version:
      type: string
      default: ""
      description: The commit hash to revert deployment
  # including dft org
  orbs:
    dft: dafiti-group/orb-standard-pipeline@1.0.2
  # reserved filters anchors
  test_filters: &test_filters
    branches:
      only: [/^feature.*/, /^hotfix.*/]
  deployment_filters: &deployment_filters
    branches:
      only: [/^release.*/, /^hotfix.*/]
  head_filters: &head_filters
    branches:
      only: [master, main]
  release_filters: &release_filters
    branches:
      only: [/^release.*/]
  hotfix_filters: &hotfix_filters
    branches:
      only: [/^hotfix.*/]
  # declaring your workflows
  workflows:
    rollback-flow:
      when:
        or:
          - equal: [true, <<pipeline.parameters.rollback>>]
      jobs:
        - dft/eks-deploy:
            name: rollback-live
            context: [DEPLOY_LIVE, SLACK]
            rollback: true
            version: <<pipeline.parameters.version>>
            deployment_path: "<path-to-gitops-deployment>"
            filters: *head_filters
    deployment-flow:
      when:
        or:
          - equal: [false, <<pipeline.parameters.rollback>>]
      jobs:
        # features & hotfix =============================================================================================
        - dft/unit-test:
            name: unit-test
            context: [TESTS, SLACK, BUILD_AND_PUSH]
            filters: *test_filters
        - dft/sonarqube:
            name: sonarqube
            context: [SONAR, SLACK]
            filters: *test_filters
        # ===============================================================================================================
        # releases & hotfixes ===========================================================================================
        - dft/hold-slack:
            name: slack-notify-hold-qa
            context: [SLACK]
            step_name: ":alert: a new release is awaiting your approve"
            filters: *release_filters
        - approval:
            name: start-to-qa
            type: approval
            filters: *release_filters
        - dft/hold-slack:
            name: slack-notify-hold-hotfix
            context: [SLACK]
            step_name: ":alert: the hotfix is waiting your approval to deploy"
            filters: *hotfix_filters
            requires: [unit-test, sonarqube]
        - approval:
            name: approve-to-qa
            type: approval
            filters: *hotfix_filters
            requires: [unit-test, sonarqube]
        - dft/ecr-build-and-push:
            name: ecr-build-and-push
            rev_txt_path: public/rev.txt
            context: [SLACK, TESTS, BUILD_AND_PUSH]
            filters: *deployment_filters
            requires: [unit-test, sonarqube, approve-to-qa, start-to-qa]
        - dft/eks-deploy:
            name: deploy-to-qa
            target_env: qa
            context: [TESTS, SLACK]
            deployment_path: "<path-to-gitops-deployment>"
            requires: [approve-to-qa, ecr-build-and-push]
        - dft/instana-notify:
            name: feedback-instana-qa
            context: [INSTANA, DEPLOY_QA, SLACK]
            requires: [deploy-to-qa]
            service_name: <your-application-service-name-in-apm>
        # =============================================================================================================
        # github action to approve this release/hotfix PR to proceed
        - dft/github-approve:
            name: dft-deploy-approve-pr
            context: [TESTS, SLACK]
            requires: [promote-qa-to-staging]
        # ===============================================================================================================
        # master & live delivery ========================================================================================
        - dft/github-update:
            name: review-open-pr-to-force-update
            context: [TESTS, SLACK]
            filters: *head_filters
        - dft/hold-slack:
            name: slack-notify-hold-production
            context: SLACK
            step_name: ":alert: pipeline waiting approval to promote to production"
            filters: *head_filters
        - approval:
            type: approval
            name: approve-deploy-production
            filters: *head_filters
        - dft/eks-promote:
            name: promote-homolog-to-production
            origin: clusters/staging
            destiny: clusters/production
            target: production
            context: [TESTS, SLACK]
            requires:
              [approve-deploy-production, review-open-pr-to-force-update]
        - dft/instana-notify:
            name: feedback-instana-production
            context: [INSTANA, DEPLOY_LIVE, SLACK]
            requires: [promote-homolog-to-production]
            service_name: <your-application-service-name-in-apm>
        # ===============================================================================================================
